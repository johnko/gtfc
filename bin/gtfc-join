#!/bin/sh

# Usage:
# ssh -A newhost
# gtfc-addto existingcluster /path/to/repo

. ${HOME}/bin/gtfc-keygen
export TOSPLIT=$1
. ${HOME}/bin/gtfc-parse
export FOLDER=$2
. ${HOME}/bin/gtfc-parsefolder

if [ "x" = "x$HOST" ]; then
    echo "ERROR: missing host" >&2
    exit 1
fi

# get the existing cluster config using ssh -A
ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${PORT} ${MYUSER}@${HOST} "cat ${FOLDER}/.gitcluster.ssh/known_hosts" | cat > ${HOME}/.ssh/tmp_known_hosts
ssh -o UserKnownHostsFile=${HOME}/.ssh/tmp_known_hosts -p ${PORT} ${MYUSER}@${HOST} "cat ${FOLDER}/.gitcluster.ssh/config" | cat > ${HOME}/.ssh/tmp_config

export GIT_SSH_COMMAND="ssh -F ${HOME}/.ssh/tmp_config -o UserKnownHostsFile=${HOME}/.ssh/tmp_known_hosts -i ${HOME}/.ssh/gtfc_id"


# This clone will only work with -A and add the HOST to known_hosts
[ -d ${FOLDER} ] || git clone --depth=20 --separate-git-dir=${GITPACKDIR} ssh://${MYUSER}@${HOST}:${PORT}/${REMOTEFOLDER} ${FOLDER} >/dev/null 2>&1
[ -d ${FOLDER} ] || exit 1
###########################
. ${HOME}/bin/gtfc-ssh-command
# add my pubkey to remote cluster and local repo
for file in authorized_keys2 ; do
    cat ${HOME}/.ssh/gtfc_${file} \
    | ssh -p ${PORT} ${MYUSER}@${HOST} "umask 077; test -d ~/.ssh || install -d -m 700 ~/.ssh ; cat >>~/.ssh/${file}"
    # get cluster's version
    ssh -p ${PORT} ${MYUSER}@${HOST} "cat ~/.ssh/${file}" | cat > ${HOME}/.ssh/${file}
    # now copy to repo
    install -C ${HOME}/.ssh/${file}  ${FOLDER}/.gitcluster.ssh/${file}
done

sh ${HOME}/bin/gtfc-appendconfigtocluster
###########################

#  and push
sh ${HOME}/bin/gtfc-push ${FOLDER}
